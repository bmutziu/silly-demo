name: ci
run-name: ci
on:
  push:
    branches:
      - main
      - master
jobs:
  build-container-image:
    runs-on: ubuntu-latest
    steps:
      - name: Variables
        run: |
          echo "VERSION=1.4.${{ github.run_number }}" >> "$GITHUB_ENV"
          echo "IMAGE=c8n.io/vfarcic/silly-demo" >> "$GITHUB_ENV"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Teller
        uses: spectralops/setup-teller@v1
      - name: REMOVE
        run: teller env --config .teller/c8n.yaml
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     registry: c8n.io
      #     username: ${{ secrets.C8N_USER }}
      #     password: ${{ secrets.C8N_SECRET }}
      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     platforms: linux/amd64,linux/arm64/v8
      #     tags: ${{ env.IMAGE }}:latest,${{ env.IMAGE }}:${{ env.VERSION }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      # - name: Build and push Alpine
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     platforms: linux/amd64,linux/arm64/v8
      #     tags: ${{ env.IMAGE }}:latest-alpine,${{ env.IMAGE }}:${{ env.VERSION }}-alpine
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     file: Dockerfile-alpine
      # - name: Install Cosign
      #   uses: sigstore/cosign-installer@v3.0.5
      # - name: Sign image with a key
      #   run: |
      #     cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE }}:${{ env.VERSION }}
      #     cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE }}:${{ env.VERSION }}-alpine
      #   env:
      #     COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
      #     COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      # - name: Setup Timoni
      #   uses: stefanprodan/timoni/actions/setup@main
      # - name: Timoni package
      #   run: |
      #     yq --inplace ".values.image.tag = \"${{ env.VERSION }}\"" timoni/values.yaml
      #     cat timoni/values.cue | sed -e "s@image: tag:.*@image: tag: \"${{ env.VERSION }}\"@g" | tee timoni/values.cue.tmp
      #     mv timoni/values.cue.tmp timoni/values.cue
      #     timoni mod push timoni oci://${{ env.IMAGE }}-package --version ${{ env.VERSION }}
      # - name: Helm package
      #   run: |
      #     yq --inplace ".version = \"${{ env.VERSION }}\"" helm/Chart.yaml
      #     yq --inplace ".image.tag = \"${{ env.VERSION }}\"" helm/values.yaml
      #     helm package helm
      #     helm push silly-demo-helm-${{ env.VERSION }}.tgz oci://c8n.io/vfarcic
      # - name: Commit changes
      #   run: |
      #     git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #     git config --local user.name "github-actions[bot]"
      #     git add .
      #     git commit -m "Release ${{ env.VERSION }} [skip ci]"
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: ${{ github.ref }}
